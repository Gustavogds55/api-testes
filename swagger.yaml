openapi: 3.0.0
info:
  title: API de Testes - CRUD Usuários
  description: API completa para praticar CRUD, validações e testes automatizados
  version: 2.0.0
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "João Silva"
        email:
          type: string
          format: email
          example: "joao@email.com"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-01T10:00:00.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-01T11:00:00.000Z"
    UserInput:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
          description: Nome do usuário
          example: "João Silva"
        email:
          type: string
          format: email
          description: E-mail do usuário
          example: "joao@email.com"
    Error:
      type: object
      properties:
        error:
          type: string
          example: "Usuário não encontrado"
paths:
  /:
    get:
      summary: Health check da API
      responses:
        '200':
          description: API funcionando
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "API funcionando 🚀"
  /api/users:
    get:
      summary: Listar todos os usuários
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  total:
                    type: integer
                    example: 2
    post:
      summary: Criar um novo usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuário criado com sucesso!"
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: "O nome é obrigatório"
                        param:
                          type: string
                          example: "name"
                        location:
                          type: string
                          example: "body"
    delete:
      summary: Limpar todos os usuários
      responses:
        '200':
          description: Todos os usuários foram removidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Todos os usuários foram removidos!"
  /api/users/{id}:
    get:
      summary: Buscar usuário por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Atualizar usuário
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuário atualizado com sucesso!"
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletar usuário
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Usuário deletado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuário deletado com sucesso!"
                  data:
                    $ref: '#/components/schemas/User'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'